When would you want to use a remote repository rather than keeping all your work
local?

    I would like to do so when I need to backup my code. I used to manually copy
    and paste code onto the Github Gists, but it's very annoying doing it every
    time, especially when the project is growing bigger and bigger(I can only
    view diff, but can't write commit messages).

    Also, when I need to switch working computers often, that's when I would like
    to use a remote repo.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Not sure with this one...

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork --> a term that is just like clone, but it can only be done on Github server.
    Clone --> clone(copy) the entire project from Github to local machine
    Branch --> a commit that veers off the master branch

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It'll be easier to see what's actually going on at the remote branch, and
    thus programmers can be aware of changes and merge them before the snowball
    becomes bigger and bigger that's beyond their limit to merge.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It would mostly be something like patches, where code to be changed are marked
    in a specific way and letting everybody working on the code base know that
    this is something that you want to put into the current code base. So it's
    definitely going to be harder to work this way.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
