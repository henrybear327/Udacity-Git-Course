How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Simple typos can be seen easily and correct right away. Also, while working
    on some large projects, diff can help clarify current workflow, seeing what
    has been changed and check if I have missed something or not.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I think that the work which has been done can be clarified in a much easier
    manner. Also, it's easier to keep track on what is actually going on on the
    entire project. For example, if I made a bug fix, and later on I discovered
    yet another bug that may be associated with the previous bug that I thought
    I have already fixed, with the help of file history, I can easily trace back
    to that point of time and check if I had done all the work correctly or not.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros of manually choosing when to commits
      - Grouping of logical changes
      - being able to add messages to each commits
      - easier to go back to a specific version that is exactly what you want
      - saves disk space

    Cons
      - Requires additional steps and time
      - May forget to make commit sometimes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
